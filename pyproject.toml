[project]
name = "parakeet-rocm"
version = "0.5.2"
description = "ASR inference service for NVIDIA Parakeet-TDT 0.6B v2 on AMD ROCm GPUs"
authors = [{ name = "elvee" }]
requires-python = ">=3.10,<3.11"


dependencies = [
  "typer[all]>=0.12.3",
  "rich>=13.7.1,<14.0.0",
  # ---- NeMo requirements.txt ----
  "fsspec==2024.12.0",
  "huggingface_hub>=0.24",
  "numba",
  "numpy>=1.22",
  # "onnx>=1.7.0",
  "protobuf~=5.29.5",
  "python-dateutil",
  "ruamel.yaml",
  "scikit-learn",
  "setuptools>=70.0.0",
  "tensorboard",
  "text-unidecode",
  # "torch==2.7.1",
  # "torchaudio==2.7.1",
  "tqdm>=4.41.0",
  "wget",
  "wrapt",

  # ---- NeMo requirements_asr.txt ----
  "braceexpand",
  "editdistance",
  "einops",
  "jiwer>=3.1.0,<4.0.0",
  "kaldi-python-io",
  "lhotse!=1.31.0",
  "librosa>=0.10.1",
  "marshmallow",
  "optuna",
  "packaging",
  "pyannote.core",
  "pyannote.metrics",
  "pydub",
  "pyloudnorm",
  "resampy",
  "scipy>=0.14",
  "soundfile",
  "sox<=1.5.0",
  "texterrors<1.0.0",
  "whisper_normalizer",
  "nemo-toolkit[asr]>=2.4.0",
  "python-dotenv>=1.1.1",
  "typer>=0.16.0",
  "pydantic>=2.7.0",
]

[project.optional-dependencies]
rocm = [
  "torch==2.7.1",
  "torchaudio==2.7.1",
  "onnxruntime-rocm==1.21.0",
]
webui = [
    "gradio>=5.39.0",
    "streamlit>=1.47.1",
]
dev = [
    "ruff>=0.12.5",
    "isort>=6.0.1",
    "pylint>=3.3.7",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]
[project.scripts]
parakeet-rocm = "parakeet_nemo_asr_rocm.cli:app"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["parakeet_nemo_asr_rocm"]

[tool.pdm]
distribution = true

# ------------------------------
# Import sorting (isort)
# Align isort behaviour with Ruff/Black so that clean_codebase.sh runs
# `isort` without fighting the `ruff format` import ordering.
# ------------------------------
[tool.isort]
profile = "black"         # same style Ruff uses
line_length = 88           # match Black/Ruff default
multi_line_output = 3      # Vertical hanging indent (black-compatible)
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
skip_gitignore = true
known_first_party = ["parakeet_nemo_asr_rocm"]

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple/"
verify_ssl = true
type = "index"
exclude_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm", "nvidia-*"]
include_packages = ["*"]

[[tool.pdm.source]]
name = "rocm-wheels"
url = "https://repo.radeon.com/rocm/manylinux/rocm-rel-6.4.2/"
verify_ssl = true
type = "find_links"
include_packages = ["torch", "torchaudio", "onnxruntime-rocm", "pytorch-triton-rocm"]
